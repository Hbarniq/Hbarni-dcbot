/** @module StageChannel */
import Member from "./Member";
import type CategoryChannel from "./CategoryChannel";
import type StageInstance from "./StageInstance";
import TextableChannel from "./TextableChannel";
import type { ChannelTypes, VideoQualityModes } from "../Constants";
import type Client from "../Client";
import TypedCollection from "../util/TypedCollection";
import type { EditStageChannelOptions, RawStageChannel } from "../types/channels";
import type { JSONStageChannel } from "../types/json";
import type { RawMember, CreateStageInstanceOptions, EditStageInstanceOptions } from "../types/guilds";
import type { JoinVoiceChannelOptions } from "../types/voice";
import type { VoiceConnection } from "@discordjs/voice";
/** Represents a guild stage channel. */
export default class StageChannel extends TextableChannel<StageChannel> {
    /** The bitrate of the stage channel. */
    bitrate: number;
    /** The id of the voice region of the channel, `null` is automatic. */
    rtcRegion: string | null;
    type: ChannelTypes.GUILD_STAGE_VOICE;
    /** The maximum number of members in this voice channel. `0` is unlimited. */
    userLimit: number;
    /** The [video quality mode](https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes) of this channel. */
    videoQualityMode: VideoQualityModes;
    voiceMembers: TypedCollection<string, RawMember, Member, [guildID: string]>;
    constructor(data: RawStageChannel, client: Client);
    protected update(data: Partial<RawStageChannel>): void;
    get parent(): CategoryChannel | null | undefined;
    /**
     * Create a stage instance on this channel.
     * @param options The options for creating the stage instance.
     */
    createStageInstance(options: CreateStageInstanceOptions): Promise<StageInstance>;
    /**
     * Delete the stage instance on this channel.
     * @param reason The reason for deleting the stage instance.
     */
    deleteStageInstance(reason?: string): Promise<void>;
    /**
     * Edit this channel.
     * @param options The options for editing the channel.
     */
    edit(options: EditStageChannelOptions): Promise<this>;
    /**
     * Edit the stage instance on this channel.
     * @param options The options for editing the stage instance.
     */
    editStageInstance(options: EditStageInstanceOptions): Promise<StageInstance>;
    /**
     * Get the stage instance associated with this channel.
     */
    getStageInstance(): Promise<StageInstance>;
    /**
     * Join this stage channel.
     * @param options The options to join the channel with.
     */
    join(options: Omit<JoinVoiceChannelOptions, "guildID" | "channelID" | "voiceAdapterCreator">): VoiceConnection;
    /** Leave this stage channel. */
    leave(): void;
    toJSON(): JSONStageChannel;
}
