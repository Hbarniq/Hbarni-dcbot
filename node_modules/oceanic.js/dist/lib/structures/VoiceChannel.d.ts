/** @module VoiceChannel */
import Member from "./Member";
import type CategoryChannel from "./CategoryChannel";
import TextableChannel from "./TextableChannel";
import type { JoinVoiceChannelOptions } from "../types/voice";
import type { ChannelTypes, VideoQualityModes } from "../Constants";
import type Client from "../Client";
import TypedCollection from "../util/TypedCollection";
import type { EditVoiceChannelOptions, RawVoiceChannel } from "../types/channels";
import type { RawMember } from "../types/guilds";
import type { JSONVoiceChannel } from "../types/json";
import type { VoiceConnection } from "@discordjs/voice";
/** Represents a guild voice channel. */
export default class VoiceChannel extends TextableChannel<VoiceChannel> {
    /** The bitrate of the voice channel. */
    bitrate: number;
    /** The id of the voice region of the channel, `null` is automatic. */
    rtcRegion: string | null;
    type: ChannelTypes.GUILD_VOICE;
    /** The maximum number of members in this voice channel. `0` is unlimited. */
    userLimit: number;
    /** The [video quality mode](https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes) of this channel. */
    videoQualityMode: VideoQualityModes;
    voiceMembers: TypedCollection<string, RawMember, Member, [guildID: string]>;
    constructor(data: RawVoiceChannel, client: Client);
    protected update(data: Partial<RawVoiceChannel>): void;
    get parent(): CategoryChannel | null | undefined;
    /**
     * Edit this channel.
     * @param options The options for editing the channel.
     */
    edit(options: EditVoiceChannelOptions): Promise<this>;
    /**
     * Join this voice channel.
     * @param options The options to join the channel with.
     */
    join(options: Omit<JoinVoiceChannelOptions, "guildID" | "channelID" | "voiceAdapterCreator">): VoiceConnection;
    /** Leave this voice channel. */
    leave(): void;
    toJSON(): JSONVoiceChannel;
}
